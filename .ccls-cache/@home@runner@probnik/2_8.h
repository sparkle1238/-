#include <stdio.h>
/*
8. Дана прямоугольная матрица с неотрицательными элементами (назовем значение элемента стоимостью перехода на эту позицию). Черепашка находится в правом верхнем углу, и ей необходимо добраться до левого нижнего. Передвигаться черепашка может только вправо или вниз, и хочет собрать максимальную сумму. Реализуйте функцию int Turtle(int**, int, int);, где первый параметр - двумерный массив, второй - количество строк, третий - столбцов. Вернуть максимально возможную сумму. 
*/
int Turtle( int n , int m,int arr[n][m])
{ 
  //меняем первую строку
  for (int j=n-2;j>0;j--)
  {
    arr[0][j]=arr[0][j+1]+arr[0][j];
  }

  //меняем последний столбец 
  for (int i=1;i<m-1;i++)
  {
    arr[i][m-1]=arr[i-1][m-1]+arr[i][m-1];
  }

  //меняем матрицу 
  for(int i=1;i<n;i++)
  {
    for(int j=m-2;j>=0;j--)
    {
      if (arr[i-1][j]>arr[i][j+1])
      {
        arr[i][j]=arr[i-1][j]+arr[i][j];
      }
      else
      {
        arr[i][j]=arr[i][j+1]+arr[i][j];
      }
    }
  }
  return arr[9][0];
}


int main()
{
  int arr[10][10] =
  {{28,96,26,1,58,19,16,29,58,76},
   {35,33,11,88,92,31,15,5,39,21},
   {83,82,8,20,20,95,33,89,96,21},
   {61,11,95,70,8,91,41,64,46,50},
   {95,68,20,30,87,31,11,60,47,68},
   {28,48,40,46,6,28,74,7,100,55},
   {60,68,80,86,94,14,90,65,53,96},
   {89,15,37,8,34,94,99,51,1,76},
   {29,57,86,73,79,65,93,55,91,95},
   {68,40,86,47,39,4,62,23,33,15}};
  int a = Turtle( 10, 10, arr );
  printf("%i",a);


}
